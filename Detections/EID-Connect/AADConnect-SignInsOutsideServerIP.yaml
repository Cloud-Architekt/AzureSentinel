id: 12531591-8392-4b4c-b117-485216bbf577
name: Successful sign-ins from valid Microsoft Entra Connector account outside of allowlisted IP address from WatchList
description: |
  Detection of sign-ins outside of a named public IP addresses. We're AccountObject ID from the "Service Accounts" watchlist to detect any sign-ins outside of the named IP address which is defined in the "High Value Asses" watchlist. Furthermore, we're covering all sign-ins to the Microsoft Entra Connect Endpoints (Azure AD Sync and AAD Connect V2) to detect sign-ins that doesn't match with the WatchList.
severity: Medium
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
  - connectorId: AzureActiveDirectory
    dataTypes:
      - AADNonInteractiveUserSignInLogs
queryFrequency: 30m
queryPeriod: 1h
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CredentialAccess
  - PrivilegeEscalation
  - InitialAccess
relevantTechniques:
  - T1078
  - T1528
query: |
  let AADCServer = _GetWatchlist('HighValueAssets')
    | extend Tags = column_ifexists("Tags","")
    | where Tags has_any ("Azure AD Connect", "Entra Connect")
    | extend ['IP Address'] = column_ifexists("IP Address","")
    | mv-expand IP = parse_json(['IP Address']) to typeof(string)
    | extend IPString = tostring(IP)
    | extend IsCIDR = iif(IPString contains "/", 1, 0);
  let AADC_IPs = AADCServer
    | where IsCIDR == 0
    | distinct IPString;
  let AADC_CIDRs = AADCServer
    | where IsCIDR == 1
    | summarize CIDRList = make_list(IPString);
  let AADConnectorAcc = _GetWatchlist('ServiceAccounts')
    | where Tags has_any ("Azure AD Connect", "Entra Connect")
    | project AccountObjectId = ['Service AAD Object Id'];
  union isfuzzy=true AADNonInteractiveUserSignInLogs, SigninLogs
  | where ingestion_time() > ago(40m)
  // AADC APIs: AADSync = "cb1056e2-e479-49de-ae31-7812af012ed8", AAD Connect v2 = 6eb59a73-39b2-4c23-a70f-e2e3ce8965b1
  | where UserId in (AADConnectorAcc) or AppId in ("cb1056e2-e479-49de-ae31-7812af012ed8", "6eb59a73-39b2-4c23-a70f-e2e3ce8965b1")
  | where not(IPAddress in (AADC_IPs) or ipv4_is_in_any_range(IPAddress, toscalar(AADC_CIDRs)))
  | where ResultType == "0"
  | project TimeGenerated, Category, UserPrincipalName, AppDisplayName, AppId, IPAddress, RiskState
  | extend timestamp = TimeGenerated, IPCustomEntity = IPAddress, AccountCustomEntity = UserPrincipalName
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
version: 1.1.0
kind: Scheduled
