{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/8cd003d2-7a8b-4eba-b50a-39287757120d')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/8cd003d2-7a8b-4eba-b50a-39287757120d')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-11-01-preview",
            "properties": {
                "displayName": "Added Ownership to workload identity (WorkloadIdentityInfo)",
                "description": "Detects changes to the ownership of application and service principal. Alert will be increased to high if assigned owner is unprivileged or lower privileged. Monitor these changes to avoid privileged escalation paths and breach of tiering model. Avoid using ownership and assign delegated permissions by using object- and permission-scoped Entra ID roles (based on your requirements). Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-applications#new-owner",
                "severity": "Medium",
                "enabled": true,
                "query": "AuditLogs\n| where OperationName in (\"Add owner to application\", \"Add owner to service principal\")\n| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| extend InitiatingUserOrAppId = iff(isnotempty(InitiatedBy.user.id), tostring(InitiatedBy.user.id), tostring(InitiatedBy.app.id))\n| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| mv-expand TargetResources \n| mv-expand TargetResources.modifiedProperties\n| where TargetResources_modifiedProperties.displayName == \"Application.AppId\" or TargetResources_modifiedProperties.displayName == \"ServicePrincipal.AppId\"\n| extend ApplicationId = replace_string(tostring(TargetResources_modifiedProperties.newValue), '\"', '')\n| extend AddedOwnerId = tostring(TargetResources.id)\n| join kind=leftouter(\n    PrivilegedWorkloadIdentityInfo\n    | project\n        WorkloadIdentityName,\n        WorkloadIdentityType,\n        ApplicationObjectId,\n        ServicePrincipalObjectId,\n        ApplicationId,\n        IsFirstPartyApp,\n        EntraIdRoles,\n        AppRolePermissions,\n        WorkloadIdClassification = EnterpriseAccessModelTiering\n    )\n    on ApplicationId\n| join kind=leftouter (\n    UnifiedIdentityInfo\n    | project ObjectId, InitiatingUserOrAppClassification = Classification\n    )\n    on $left.InitiatingUserOrAppId == $right.ObjectId\n| join kind=leftouter (\n    UnifiedIdentityInfo\n    | project\n        AddedOwnerClassification = Classification,\n        AddedOwnerDisplayName = ObjectDisplayName,\n        ObjectId\n    )\n    on $left.AddedOwnerId == $right.ObjectId\n// Compare Classification of Application with Owner to detect \"Tiering\" breach, Allowlist all Control Plane roles \n| extend TieringBreach = iff(parse_json(tostring(parse_json(AddedOwnerClassification))) !contains WorkloadIdClassification and (parse_json(tostring(parse_json(AddedOwnerClassification))) !contains \"ControlPlane\"), \"True\", \"False\")\n| extend Severity = iff(TieringBreach == \"True\", \"High\", \"Medium\")\n| extend OperationAlertTitle = replace_string(OperationName,\"Add \",\"\")\n| project\n    TimeGenerated,\n    OperationName,\n    OperationAlertTitle,\n    WorkloadIdentityName,\n    WorkloadIdentityType,\n    WorkloadIdClassification,\n    ApplicationObjectId,\n    ApplicationId,\n    ServicePrincipalObjectId,\n    InitiatingUserOrApp,\n    InitiatingUserOrAppId,\n    InitiatingIpAddress,\n    AddedOwnerId,\n    AddedOwnerClassification,\n    AddedOwnerDisplayName,\n    EntraIdRoles,\n    AppRolePermissions,\n    IsFirstPartyApp,\n    TieringBreach,\n    Severity\n\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Persistence",
                    "PrivilegeEscalation"
                ],
                "techniques": [
                    "T1078"
                ],
                "alertRuleTemplateName": "8cd003d2-7a8b-4eba-b50a-39287757120d",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": true,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "Added {{OperationAlertTitle}} with privileges on {{WorkloadIdClassification}} ",
                    "alertDescriptionFormat": "{{AddedOwnerClassification}} user has been added as owner to {{WorkloadIdentityName}} with privileges on {{WorkloadIdClassification}}. Avoid using ownership and assign delegated permissions by using object- and permission-scoped Entra ID roles (based on your requirements). Verify the assignment to prevent tiering breach and permanent privileged access to a workload identity.\n  Ref: https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-applications#new-owner",
                    "alertSeverityColumnName": "Severity",
                    "alertDynamicProperties": []
                },
                "customDetails": {
                    "WorkloadIdentityName": "WorkloadIdentityName",
                    "WorkloadIdentityType": "WorkloadIdentityType",
                    "ServicePrincipalId": "ServicePrincipalObjectId",
                    "ApplicationId": "ApplicationId",
                    "IsFirstPartyApp": "IsFirstPartyApp",
                    "PrivilegedAccess": "WorkloadIdClassification",
                    "EntraDirectoryRoles": "EntraIdRoles",
                    "MSGraphRoles": "AppRolePermissions",
                    "TieringBreach": "TieringBreach"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "AadUserId",
                                "columnName": "InitiatingUserOrAppId"
                            }
                        ]
                    },
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "AadUserId",
                                "columnName": "AddedOwnerId"
                            }
                        ]
                    },
                    {
                        "entityType": "CloudApplication",
                        "fieldMappings": [
                            {
                                "identifier": "AppId",
                                "columnName": "ApplicationId"
                            }
                        ]
                    },
                    {
                        "entityType": "CloudApplication",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "WorkloadIdentityName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "InitiatingIpAddress"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.0"
            }
        }
    ]
}