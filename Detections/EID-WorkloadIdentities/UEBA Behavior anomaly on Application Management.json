{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/d4ae2281-9c29-4ce6-b554-0c124efb14b1')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/d4ae2281-9c29-4ce6-b554-0c124efb14b1')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-11-01-preview",
            "properties": {
                "displayName": "UEBA Behavior anomaly on Application Management",
                "description": "Anomaly detected by UEBA with investigation priority score in combination with one of the following conditions:\n- Actor has no active or permanent Entra ID role assignment in the past 14 days\n- Risky User with Risk Level of Medium or higher\n\nThe incident will be increased to “High” severity if the Actor has been assigned to “Control Plane” Entra ID role in the past 14 days. All other results will be set to severity “Informational” and not included in the incident creation.",
                "severity": "Medium",
                "enabled": true,
                "query": "// List of (active/permanent) Directory role member with with enriched classification from EntraOps Privileged EAM\n// by using IdentityInfo table from Microsoft Sentinel UEBA\nlet SensitiveEntraDirectoryRoles = externaldata(RoleName: string, RoleId: string, isPrivileged: bool, Classification: dynamic)[\"https://raw.githubusercontent.com/Cloud-Architekt/AzurePrivilegedIAM/main/Classification/Classification_EntraIdDirectoryRoles.json\"] with(format='multijson')\n    | where Classification.EAMTierLevelName != \"Unclassified\"\n    | extend EAMTierLevelName = Classification.EAMTierLevelName\n    | project RoleName, isPrivileged, EAMTierLevelName;\nlet AllUsers = IdentityInfo\n    | where TimeGenerated > ago(14d)\n    | mv-expand AssignedRoles\n    | extend RoleName = tostring(AssignedRoles)\n    | join kind=leftouter (SensitiveEntraDirectoryRoles) on RoleName\n    | extend EnterpriseAccessModelLevel = iff(isempty(EAMTierLevelName), \"UserAccess\", EAMTierLevelName)\n    | summarize\n        EnterpriseAccessModelTiering = make_set(EnterpriseAccessModelLevel),\n        PastRoleAssignments = make_set(RoleName),\n        PastRiskLevel = make_set(RiskLevel),\n        PastRiskState = make_set(RiskState)\n        by UserId = AccountObjectId, UserPrincipalName = AccountUPN, IsAccountEnabled;\nBehaviorAnalytics\n| where TimeGenerated > ago(1d)\n| where ActivityType == \"ApplicationManagement\"\n| join kind=inner (AllUsers) on UserPrincipalName\n// Increase severity if investigation priority is larger than 1 and risk on level Medium or High has been detected by the user in the past 14 days or user has no privileged directory role in the past or \n| extend Severity = iff(InvestigationPriority > 1 and (EnterpriseAccessModelTiering[0] == \"UserAccess\" or (PastRiskState[0] == \"AtRisk\" and (PastRiskLevel contains \"Medium\" or PastRiskLevel contains \"High\"))), \"Low\", \"Informational\")\n// Step up severity to \"High\" if actor is Control Plane administrator\n| extend Severity = iff(EnterpriseAccessModelTiering contains \"ControlPlane\" and Severity != \"Informational\", \"Medium\", Severity)\n// Informational events will be filtered and not considered for incidents\n| where Severity != \"Informational\"\n| mv-expand parse_json(ActivityInsights)\n| where ActivityInsights !contains \"False\"\n| project\n    Severity,\n    TimeGenerated,\n    InvestigationPriority,\n    ActivityType,\n    ActionType,\n    ActivityInsights,\n    EnterpriseAccessModelTiering,\n    UserPrincipalName,\n    SourceIPAddress,\n    PastRoleAssignments,\n    PastRiskLevel,\n    PastRiskState,\n    Type\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [],
                "techniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "UEBA Behavior anomaly: {{ActivityType}} ",
                    "alertDescriptionFormat": " {{ActionType}} with the following anomaly: {{ActivityInsights}} ",
                    "alertSeverityColumnName": "Severity",
                    "alertDynamicProperties": [
                        {
                            "alertProperty": "ProductComponentName",
                            "value": "Type"
                        }
                    ]
                },
                "customDetails": {
                    "InvestigationScore": "InvestigationPriority",
                    "ActivityType": "ActivityType",
                    "ActionType": "ActionType",
                    "ActivityInsights": "ActivityInsights",
                    "UserClassification": "EnterpriseAccessModelTiering",
                    "PastDirectoryRoles": "PastRoleAssignments",
                    "PastUserRiskLevel": "PastRiskLevel",
                    "PastRiskState": "PastRiskState"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "UserPrincipalName"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "SourceIPAddress"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}