{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/06be8a2a-4790-4c31-8945-d74ea37e8ce0')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/06be8a2a-4790-4c31-8945-d74ea37e8ce0')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2023-12-01-preview",
            "properties": {
                "displayName": "Unauthorized actor has been added Federated Credential on User-Assigned Managed Identity",
                "description": "Actor outside of the defined authorized users has been added a federated credential which could be used to gain persistent access by an untrusted entity. Severity of the incident will be increased to \"high\" if sign-in risk has been detected.",
                "severity": "Medium",
                "enabled": true,
                "query": "let IncludeScope = dynamic(['36955ea9-c98e-4749-b603-ffefe652dd90/lab/lab-platform/lab-management/4d3e5b65-8a52-4b2f-b5cd-1670c700136b']); \nlet ExcludeActors = IdentityInfo\n    | where TimeGenerated > ago(14d)\n    | summarize arg_max(TimeGenerated, *) by AccountObjectId\n    | where GroupMembership has \"<GroupOfAzureIdentityAdministrators>\"\n    | project AccountObjectId;\nlet ExcludeActorsWithRole = dynamic(['Owner', 'User Access Administrator', 'Subscription Admin']); \nlet FilteredRiskLevel = \"\";\nAzureActivity\n| where OperationNameValue =~ \"MICROSOFT.MANAGEDIDENTITY/USERASSIGNEDIDENTITIES/FEDERATEDIDENTITYCREDENTIALS/WRITE\" and ActivityStatusValue == \"Success\"\n| extend Hiearchy = parse_json(Properties).hierarchy\n| where Hiearchy in~ (IncludeScope)\n| extend CallerObjectId = Claims_d.[\"http://schemas.microsoft.com/identity/claims/objectidentifier\"]\n| where CallerObjectId !in~ (ExcludeActors)\n| extend CallerRole = parse_json(tostring(Authorization_d.evidence)).role\n| where CallerRole !in~ (ExcludeActorsWithRole)\n| extend UniqueTokenIdentifier = tostring(parse_json(Claims).uti)\n| join kind=leftouter (union SigninLogs, AADNonInteractiveUserSignInLogs\n    | summarize by UniqueTokenIdentifier, RiskLevel, RiskLevelDuringSignIn\n    )\n    on $left.UniqueTokenIdentifier == $right.UniqueTokenIdentifier\n| where RiskLevel in (FilteredRiskLevel) or RiskLevelDuringSignIn in (FilteredRiskLevel)\n| extend Severity = iff(RiskLevelDuringSignIn != \"none\", \"High\", \"Medium\")\n| project\n    TimeGenerated,\n    Caller,\n    CallerIpAddress,\n    CorrelationId,\n    ResourceId = _ResourceId,\n    UniqueTokenIdentifier,\n    FederatedCredentialEntity = parse_json(Properties).entity,\n    Hierarchy,\n    RiskLevelDuringSignIn,\n    Severity\n\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "P14D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [
                    "Persistence"
                ],
                "techniques": [],
                "subTechniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                    "alertSeverityColumnName": "Severity",
                    "alertDynamicProperties": []
                },
                "customDetails": {
                    "Entity": "FederatedCredentialEntity",
                    "Hierarchy": "Hierarchy",
                    "RiskLevelSignIn": "RiskLevelDuringSignIn"
                },
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "Name",
                                "columnName": "Caller"
                            }
                        ]
                    },
                    {
                        "entityType": "IP",
                        "fieldMappings": [
                            {
                                "identifier": "Address",
                                "columnName": "CallerIpAddress"
                            }
                        ]
                    },
                    {
                        "entityType": "AzureResource",
                        "fieldMappings": [
                            {
                                "identifier": "ResourceId",
                                "columnName": "ResourceId"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}