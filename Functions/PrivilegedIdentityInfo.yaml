id: fc353efc-4846-49ae-8328-39fabbbed5a6
Function:
  Title: Parser to get summarized overview of privileged identities from IdentityInfo table with all directory role assignments, enriched with details from my EntraOps classification and role definitions.
  Version: '1.0.0'
  LastUpdated: '2025-03-17'
Category: Microsoft Defender XDR Function
FunctionName: PrivilegedIdentityInfo
FunctionAlias: PrivilegedIdentityInfo
FunctionQuery: |
    let PrivilegedIdentityInfo = (UserPrincipalName:string, ObjectId:string, EntraRoleDefinitionName:string="", EntraRolePermission:string="", LookbackTimestamp:datetime=datetime(now)) {
        let SensitiveEntraDirectoryRoles = externaldata(RoleName: string, RoleId: string, isPrivileged: bool, Categories:string, Classification: dynamic, RolePermissions: dynamic)["https://raw.githubusercontent.com/Cloud-Architekt/AzurePrivilegedIAM/main/Classification/Classification_EntraIdDirectoryRoles.json"] with(format='multijson')
        | project RoleDefinitionName = RoleName, RoleIsPrivileged = isPrivileged, Classification, RoleCategories = Categories, RolePermissions;
        let AllPimRoles = IdentityInfo
            | where tolower(AccountUpn) contains tolower(UserPrincipalName) and AccountObjectId contains (ObjectId)
            | where TimeGenerated > ago(14d) and TimeGenerated <(LookbackTimestamp)
            | summarize arg_max(TimeGenerated, *) by AccountObjectId
            | mv-expand parse_json(PrivilegedEntraPimRoles)
            | extend RoleDefinitionName = tostring(bag_keys(PrivilegedEntraPimRoles)[0])
            | where RoleDefinitionName contains (EntraRoleDefinitionName)
            | extend PimAssignmentExpiration = tostring(PrivilegedEntraPimRoles[RoleDefinitionName][1])
            | extend PimAssignmentType = tostring(PrivilegedEntraPimRoles[RoleDefinitionName][0])
            | extend RoleAssignmentType = tostring(PrivilegedEntraPimRoles[RoleDefinitionName][2])
            | project AccountObjectId, AccountUpn, RoleDefinitionName, RoleAssignmentType, PimAssignmentType, PimAssignmentExpiration
            | sort by AccountUpn, RoleDefinitionName;    
        let EligibleRoles = AllPimRoles
            | where PimAssignmentType == "Eligible"
            | sort by AccountUpn, RoleDefinitionName;
        let ActiveRoles = IdentityInfo
            | where tolower(AccountUpn) contains tolower(UserPrincipalName) or AccountObjectId contains (ObjectId)
            | where TimeGenerated > ago(14d) and TimeGenerated <(LookbackTimestamp)
            | summarize arg_max(TimeGenerated, *) by AccountObjectId
            | where isnotempty(AssignedRoles)
            | mv-expand parse_json(AssignedRoles)
            | extend RoleDefinitionName = tostring(AssignedRoles)
            | where RoleDefinitionName contains (EntraRoleDefinitionName)
            | join kind = leftouter (
                AllPimRoles
                | where PimAssignmentType == "Assigned"
            ) on AccountObjectId, RoleDefinitionName
            | extend PimAssignmentExpiration = coalesce(PimAssignmentExpiration, "Unknown")
            | extend PimAssignmentType = "Active"
            | extend RoleAssignmentType = coalesce(RoleAssignmentType, "Unknown")
            | project AccountObjectId, AccountUpn, RoleDefinitionName, RoleAssignmentType, PimAssignmentType, PimAssignmentExpiration
            | sort by AccountObjectId, RoleDefinitionName;
        let AllRoles = union EligibleRoles, ActiveRoles
            | where tolower(AccountUpn) contains tolower(UserPrincipalName) and AccountObjectId contains (ObjectId)
            | join kind=inner ( SensitiveEntraDirectoryRoles
                | where RolePermissions contains (EntraRolePermission)
            ) on RoleDefinitionName
            | extend AadDirectoryRoleTierLevels = parse_json(Classification.EAMTierLevelName)
            | extend Classification = iif((AadDirectoryRoleTierLevels contains "ControlPlane"), "ControlPlane", "Unclassified")
            | extend Classification = iif((Classification == "Unclassified" and (AadDirectoryRoleTierLevels contains "ManagementPlane")), "ManagementPlane", Classification)
            | extend Classification = iif((Classification == "Unclassified" and (AadDirectoryRoleTierLevels contains "WorkloadPlane")), "WorkloadPlane", Classification)
            | extend Classification = iif((Classification == "Unclassified" and (AadDirectoryRoleTierLevels contains "UserAccess")), "UserAccess", Classification)
            | extend Classification = Classification
            | extend PimAssignmentType = iff(PimAssignmentType == "Assigned", "Active", PimAssignmentType)
            | project RoleAssignments = bag_pack_columns(RoleDefinitionName, RoleAssignmentType, PimAssignmentType, PimAssignmentExpiration, Classification, RoleIsPrivileged, RoleCategories, RolePermissions), AccountObjectId
            | summarize RoleAssignments = make_set(RoleAssignments) by AccountObjectId;
        IdentityInfo
        | where tolower(AccountUpn) contains tolower(UserPrincipalName) and AccountObjectId contains (ObjectId)    
        | where TimeGenerated > ago(14d) and TimeGenerated <(LookbackTimestamp)
        | summarize arg_max(TimeGenerated, *) by AccountObjectId
        | join kind=inner ( AllRoles ) on AccountObjectId
        | project-away ReportId, AssignedRoles, PrivilegedEntraPimRoles, AccountObjectId1
        | sort by AccountName asc
    };
    PrivilegedIdentityInfo(UserPrincipalName,ObjectId,EntraRoleDefinitionName,EntraRolePermission,LookbackTimestamp)
